/*
Up API

The Up API gives you programmatic access to your balances and transaction data. You can request past transactions or set up webhooks to receive real-time events when new transactions hit your account. It’s new, it’s exciting and it’s just the beginning. 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// WebhookEventResourceAttributes struct for WebhookEventResourceAttributes
type WebhookEventResourceAttributes struct {
	// The type of this event. This can be used to determine what action to take in response to the event. 
	EventType WebhookEventTypeEnum `json:"eventType"`
	// The date-time at which this event was generated. 
	CreatedAt time.Time `json:"createdAt"`
}

// NewWebhookEventResourceAttributes instantiates a new WebhookEventResourceAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookEventResourceAttributes(eventType WebhookEventTypeEnum, createdAt time.Time) *WebhookEventResourceAttributes {
	this := WebhookEventResourceAttributes{}
	this.EventType = eventType
	this.CreatedAt = createdAt
	return &this
}

// NewWebhookEventResourceAttributesWithDefaults instantiates a new WebhookEventResourceAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookEventResourceAttributesWithDefaults() *WebhookEventResourceAttributes {
	this := WebhookEventResourceAttributes{}
	return &this
}

// GetEventType returns the EventType field value
// If the value is explicit nil, the zero value for WebhookEventTypeEnum will be returned
func (o *WebhookEventResourceAttributes) GetEventType() WebhookEventTypeEnum {
	if o == nil {
		var ret WebhookEventTypeEnum
		return ret
	}

	return o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebhookEventResourceAttributes) GetEventTypeOk() (*WebhookEventTypeEnum, bool) {
	if o == nil || o.EventType == nil {
		return nil, false
	}
	return &o.EventType, true
}

// SetEventType sets field value
func (o *WebhookEventResourceAttributes) SetEventType(v WebhookEventTypeEnum) {
	o.EventType = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *WebhookEventResourceAttributes) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *WebhookEventResourceAttributes) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *WebhookEventResourceAttributes) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o WebhookEventResourceAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EventType != nil {
		toSerialize["eventType"] = o.EventType
	}
	if true {
		toSerialize["createdAt"] = o.CreatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableWebhookEventResourceAttributes struct {
	value *WebhookEventResourceAttributes
	isSet bool
}

func (v NullableWebhookEventResourceAttributes) Get() *WebhookEventResourceAttributes {
	return v.value
}

func (v *NullableWebhookEventResourceAttributes) Set(val *WebhookEventResourceAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookEventResourceAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookEventResourceAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookEventResourceAttributes(val *WebhookEventResourceAttributes) *NullableWebhookEventResourceAttributes {
	return &NullableWebhookEventResourceAttributes{value: val, isSet: true}
}

func (v NullableWebhookEventResourceAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookEventResourceAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


