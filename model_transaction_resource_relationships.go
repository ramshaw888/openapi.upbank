/*
Up API

The Up API gives you programmatic access to your balances and transaction data. You can request past transactions or set up webhooks to receive real-time events when new transactions hit your account. It’s new, it’s exciting and it’s just the beginning. 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TransactionResourceRelationships struct for TransactionResourceRelationships
type TransactionResourceRelationships struct {
	Account TransactionResourceRelationshipsAccount `json:"account"`
	TransferAccount TransactionResourceRelationshipsTransferAccount `json:"transferAccount"`
	Category TransactionResourceRelationshipsCategory `json:"category"`
	ParentCategory CategoryResourceRelationshipsParent `json:"parentCategory"`
	Tags TransactionResourceRelationshipsTags `json:"tags"`
}

// NewTransactionResourceRelationships instantiates a new TransactionResourceRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionResourceRelationships(account TransactionResourceRelationshipsAccount, transferAccount TransactionResourceRelationshipsTransferAccount, category TransactionResourceRelationshipsCategory, parentCategory CategoryResourceRelationshipsParent, tags TransactionResourceRelationshipsTags) *TransactionResourceRelationships {
	this := TransactionResourceRelationships{}
	this.Account = account
	this.TransferAccount = transferAccount
	this.Category = category
	this.ParentCategory = parentCategory
	this.Tags = tags
	return &this
}

// NewTransactionResourceRelationshipsWithDefaults instantiates a new TransactionResourceRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionResourceRelationshipsWithDefaults() *TransactionResourceRelationships {
	this := TransactionResourceRelationships{}
	return &this
}

// GetAccount returns the Account field value
func (o *TransactionResourceRelationships) GetAccount() TransactionResourceRelationshipsAccount {
	if o == nil {
		var ret TransactionResourceRelationshipsAccount
		return ret
	}

	return o.Account
}

// GetAccountOk returns a tuple with the Account field value
// and a boolean to check if the value has been set.
func (o *TransactionResourceRelationships) GetAccountOk() (*TransactionResourceRelationshipsAccount, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Account, true
}

// SetAccount sets field value
func (o *TransactionResourceRelationships) SetAccount(v TransactionResourceRelationshipsAccount) {
	o.Account = v
}

// GetTransferAccount returns the TransferAccount field value
func (o *TransactionResourceRelationships) GetTransferAccount() TransactionResourceRelationshipsTransferAccount {
	if o == nil {
		var ret TransactionResourceRelationshipsTransferAccount
		return ret
	}

	return o.TransferAccount
}

// GetTransferAccountOk returns a tuple with the TransferAccount field value
// and a boolean to check if the value has been set.
func (o *TransactionResourceRelationships) GetTransferAccountOk() (*TransactionResourceRelationshipsTransferAccount, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TransferAccount, true
}

// SetTransferAccount sets field value
func (o *TransactionResourceRelationships) SetTransferAccount(v TransactionResourceRelationshipsTransferAccount) {
	o.TransferAccount = v
}

// GetCategory returns the Category field value
func (o *TransactionResourceRelationships) GetCategory() TransactionResourceRelationshipsCategory {
	if o == nil {
		var ret TransactionResourceRelationshipsCategory
		return ret
	}

	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
func (o *TransactionResourceRelationships) GetCategoryOk() (*TransactionResourceRelationshipsCategory, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Category, true
}

// SetCategory sets field value
func (o *TransactionResourceRelationships) SetCategory(v TransactionResourceRelationshipsCategory) {
	o.Category = v
}

// GetParentCategory returns the ParentCategory field value
func (o *TransactionResourceRelationships) GetParentCategory() CategoryResourceRelationshipsParent {
	if o == nil {
		var ret CategoryResourceRelationshipsParent
		return ret
	}

	return o.ParentCategory
}

// GetParentCategoryOk returns a tuple with the ParentCategory field value
// and a boolean to check if the value has been set.
func (o *TransactionResourceRelationships) GetParentCategoryOk() (*CategoryResourceRelationshipsParent, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ParentCategory, true
}

// SetParentCategory sets field value
func (o *TransactionResourceRelationships) SetParentCategory(v CategoryResourceRelationshipsParent) {
	o.ParentCategory = v
}

// GetTags returns the Tags field value
func (o *TransactionResourceRelationships) GetTags() TransactionResourceRelationshipsTags {
	if o == nil {
		var ret TransactionResourceRelationshipsTags
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *TransactionResourceRelationships) GetTagsOk() (*TransactionResourceRelationshipsTags, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Tags, true
}

// SetTags sets field value
func (o *TransactionResourceRelationships) SetTags(v TransactionResourceRelationshipsTags) {
	o.Tags = v
}

func (o TransactionResourceRelationships) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["account"] = o.Account
	}
	if true {
		toSerialize["transferAccount"] = o.TransferAccount
	}
	if true {
		toSerialize["category"] = o.Category
	}
	if true {
		toSerialize["parentCategory"] = o.ParentCategory
	}
	if true {
		toSerialize["tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableTransactionResourceRelationships struct {
	value *TransactionResourceRelationships
	isSet bool
}

func (v NullableTransactionResourceRelationships) Get() *TransactionResourceRelationships {
	return v.value
}

func (v *NullableTransactionResourceRelationships) Set(val *TransactionResourceRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionResourceRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionResourceRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionResourceRelationships(val *TransactionResourceRelationships) *NullableTransactionResourceRelationships {
	return &NullableTransactionResourceRelationships{value: val, isSet: true}
}

func (v NullableTransactionResourceRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionResourceRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


