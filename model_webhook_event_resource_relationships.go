/*
Up API

The Up API gives you programmatic access to your balances and transaction data. You can request past transactions or set up webhooks to receive real-time events when new transactions hit your account. It’s new, it’s exciting and it’s just the beginning. 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// WebhookEventResourceRelationships struct for WebhookEventResourceRelationships
type WebhookEventResourceRelationships struct {
	Webhook WebhookEventResourceRelationshipsWebhook `json:"webhook"`
	Transaction *WebhookEventResourceRelationshipsTransaction `json:"transaction,omitempty"`
}

// NewWebhookEventResourceRelationships instantiates a new WebhookEventResourceRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookEventResourceRelationships(webhook WebhookEventResourceRelationshipsWebhook) *WebhookEventResourceRelationships {
	this := WebhookEventResourceRelationships{}
	this.Webhook = webhook
	return &this
}

// NewWebhookEventResourceRelationshipsWithDefaults instantiates a new WebhookEventResourceRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookEventResourceRelationshipsWithDefaults() *WebhookEventResourceRelationships {
	this := WebhookEventResourceRelationships{}
	return &this
}

// GetWebhook returns the Webhook field value
func (o *WebhookEventResourceRelationships) GetWebhook() WebhookEventResourceRelationshipsWebhook {
	if o == nil {
		var ret WebhookEventResourceRelationshipsWebhook
		return ret
	}

	return o.Webhook
}

// GetWebhookOk returns a tuple with the Webhook field value
// and a boolean to check if the value has been set.
func (o *WebhookEventResourceRelationships) GetWebhookOk() (*WebhookEventResourceRelationshipsWebhook, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Webhook, true
}

// SetWebhook sets field value
func (o *WebhookEventResourceRelationships) SetWebhook(v WebhookEventResourceRelationshipsWebhook) {
	o.Webhook = v
}

// GetTransaction returns the Transaction field value if set, zero value otherwise.
func (o *WebhookEventResourceRelationships) GetTransaction() WebhookEventResourceRelationshipsTransaction {
	if o == nil || o.Transaction == nil {
		var ret WebhookEventResourceRelationshipsTransaction
		return ret
	}
	return *o.Transaction
}

// GetTransactionOk returns a tuple with the Transaction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEventResourceRelationships) GetTransactionOk() (*WebhookEventResourceRelationshipsTransaction, bool) {
	if o == nil || o.Transaction == nil {
		return nil, false
	}
	return o.Transaction, true
}

// HasTransaction returns a boolean if a field has been set.
func (o *WebhookEventResourceRelationships) HasTransaction() bool {
	if o != nil && o.Transaction != nil {
		return true
	}

	return false
}

// SetTransaction gets a reference to the given WebhookEventResourceRelationshipsTransaction and assigns it to the Transaction field.
func (o *WebhookEventResourceRelationships) SetTransaction(v WebhookEventResourceRelationshipsTransaction) {
	o.Transaction = &v
}

func (o WebhookEventResourceRelationships) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["webhook"] = o.Webhook
	}
	if o.Transaction != nil {
		toSerialize["transaction"] = o.Transaction
	}
	return json.Marshal(toSerialize)
}

type NullableWebhookEventResourceRelationships struct {
	value *WebhookEventResourceRelationships
	isSet bool
}

func (v NullableWebhookEventResourceRelationships) Get() *WebhookEventResourceRelationships {
	return v.value
}

func (v *NullableWebhookEventResourceRelationships) Set(val *WebhookEventResourceRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookEventResourceRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookEventResourceRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookEventResourceRelationships(val *WebhookEventResourceRelationships) *NullableWebhookEventResourceRelationships {
	return &NullableWebhookEventResourceRelationships{value: val, isSet: true}
}

func (v NullableWebhookEventResourceRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookEventResourceRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


